# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: lag-suc # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10
  region: ${opt:region}
  stage: ${opt:stage}

functions:
  LoanUpdated: # Handles SNS events of type LOAN_CREATED, LOAN_DUE_DATE and LOAN_RETURNED
    handler: src/loan-updated/handler.handle
    events:
      - sns:
          arn: ${self:custom.TopicArns.${opt:stage}.LoanCreated}
      - sns:
          arn: ${self:custom.TopicArns.${opt:stage}.LoanDueDate}
      - sns:
          arn: ${self:custom.TopicArns.${opt:stage}.LoanRenewed}
    environment:
      UserCacheTableName: ${self:custom.TableNames.userCacheTable}
      LoanCacheTableName: ${self:custom.TableNames.loanCacheTable}
      UsersQueueName: ${self:custom.UsersQueueData.Name}
      UsersQueueOwner: ${self:custom.UsersQueueData.Owner}
      UsersQueueURL: ${self:custom.UsersQueueData.URL}
  LoanReturned:
    handler: src/loan-returned/handler.handle
    events:
      - sns:
          arn: ${self:custom.TopicArns.${opt:stage}.LoanReturned}
    environment:
      UserCacheTableName: ${self:custom.TableNames.userCacheTable}
      LoanCacheTableName: ${self:custom.TableNames.loanCacheTable}
      UsersQueueName: ${self:custom.UsersQueueData.Name}
      UsersQueueOwner: ${self:custom.UsersQueueData.Owner}
      UsersQueueURL: ${self:custom.UsersQueueData.URL}

resources:
  Resources:
    userCacheTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-userCacheTable-${opt:stage}
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    loanCacheTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-loanCacheTable-${opt:stage}
        AttributeDefinitions:
          - AttributeName: loan_id
            AttributeType: S
        KeySchema:
          - AttributeName: loan_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5    
    requestCacheTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-requestCacheTable-${opt:stage}
        AttributeDefinitions:
          - AttributeName: request_id
            AttributeType: S
        KeySchema:
          - AttributeName: request_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    usersQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-${opt:stage}-usersQueue
  
  Outputs:
    UserCacheTableArn:
      Description: Arn of User Cache Table
      Value: ${self:custom.TableArns.userCacheTable}
      Export:
        Name: ${self:service}:${opt:stage}:UserCacheTableArn
    LoanCacheTableArn:
      Description: Arn of Loan Cache Table
      Value: ${self:custom.TableArns.loanCacheTable}
      Export:
        Name: ${self:service}:${opt:stage}:LoanCacheTableArn
    RequestCacheTableArn:
      Description: Arn of Request Cache Table
      Value: ${self:custom.TableArns.requestCacheTable}
      Export:
        Name: ${self:service}:${opt:stage}:RequestCacheTableArn
    UsersQueueName:
      Description: Name of Users Queue
      Value: ${self:custom.UsersQueueData.Name}
      Export:
        Name: ${self:service}:${opt:stage}:UsersQueueName
    UsersQueueOwner:
      Description: AWS Account ID of owner of Users Queue
      Value: '#{AWS::AccountId}'
      Export:
        Name: ${self:service}:${opt:stage}:UsersQueueOwner
    UsersQueueArn:
      Description: Arn of Users Queue
      Value: ${self:custom.UsersQueueData.Arn}
      Export:
        Name: ${self:service}:${opt:stage}:UsersQueueArn

custom:
  TopicArns:
    stg:
      LoanCreated: ${env:LOAN_CREATED_TOPIC_ARN_STG}
      LoanDueDate: ${env:LOAN_DUE_DATE_TOPIC_ARN_STG}
      LoanReturned: ${env:LOAN_RETURNED_TOPIC_ARN_STG}
      LoanRenewed: ${env:LOAN_RENEWED_TOPIC_ARN_STG}
    prod:
      LoanCreated: ${env:LOAN_CREATED_TOPIC_ARN_PROD}
      LoanDueDate: ${env:LOAN_DUE_DATE_TOPIC_ARN_PROD}
      LoanReturned: ${env:LOAN_RETURNED_TOPIC_ARN_PROD}
      LoanRenewed: ${env:LOAN_RENEWED_TOPIC_ARN_PROD}
  TableArns:
    userCacheTable:
      "Fn::GetAtt": [userCacheTable, Arn]
    loanCacheTable:
      "Fn::GetAtt": [loanCacheTable, Arn]
    requestCacheTable:
      "Fn::GetAtt": [requestCacheTable, Arn]
  TableNames:
    userCacheTable: ${self:service}-userCacheTable-${opt:stage}
    loanCacheTable: ${self:service}-loanCacheTable-${opt:stage}
  UsersQueueData:
    Name:
      "Fn::GetAtt": ["usersQueue", "QueueName"]
    Arn:
      "Fn::GetAtt": ["usersQueue", "Arn"]
    Owner: '#{AWS::AccountId}'
    URL:
      Ref: usersQueue

plugins:
  - serverless-pseudo-parameters

